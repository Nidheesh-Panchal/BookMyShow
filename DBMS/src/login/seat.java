/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.*;

/**
 *
 * @author nilu1
 */
public class seat extends javax.swing.JFrame {

    /**
     * Creates new form seat
     */
    //takes username,theatre id,challid,date,time for ticket booking
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    DefaultComboBoxModel ds=new DefaultComboBoxModel();
    public static Connection connecrDb() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/bms", "root", "password");
            return conn;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            System.out.println("Connection failure");
        }
        return null;
    }
    
    public final mainpage mainp;
    String username;
    public seat(String use,mainpage m) {
        initComponents();
        conn = connecrDb();
        username=use;
        mainp=m;
    }

    private seat() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        time_slot = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        a1 = new javax.swing.JToggleButton();
        a2 = new javax.swing.JToggleButton();
        a3 = new javax.swing.JToggleButton();
        a4 = new javax.swing.JToggleButton();
        a5 = new javax.swing.JToggleButton();
        a6 = new javax.swing.JToggleButton();
        a7 = new javax.swing.JToggleButton();
        a8 = new javax.swing.JToggleButton();
        b1 = new javax.swing.JToggleButton();
        b2 = new javax.swing.JToggleButton();
        b3 = new javax.swing.JToggleButton();
        b4 = new javax.swing.JToggleButton();
        b5 = new javax.swing.JToggleButton();
        b6 = new javax.swing.JToggleButton();
        b7 = new javax.swing.JToggleButton();
        b8 = new javax.swing.JToggleButton();
        c1 = new javax.swing.JToggleButton();
        c2 = new javax.swing.JToggleButton();
        c3 = new javax.swing.JToggleButton();
        c4 = new javax.swing.JToggleButton();
        c5 = new javax.swing.JToggleButton();
        c6 = new javax.swing.JToggleButton();
        c7 = new javax.swing.JToggleButton();
        c8 = new javax.swing.JToggleButton();
        d1 = new javax.swing.JToggleButton();
        d2 = new javax.swing.JToggleButton();
        d3 = new javax.swing.JToggleButton();
        d4 = new javax.swing.JToggleButton();
        d5 = new javax.swing.JToggleButton();
        d6 = new javax.swing.JToggleButton();
        d7 = new javax.swing.JToggleButton();
        d8 = new javax.swing.JToggleButton();
        e1 = new javax.swing.JToggleButton();
        e2 = new javax.swing.JToggleButton();
        e3 = new javax.swing.JToggleButton();
        e4 = new javax.swing.JToggleButton();
        e5 = new javax.swing.JToggleButton();
        e6 = new javax.swing.JToggleButton();
        e7 = new javax.swing.JToggleButton();
        e8 = new javax.swing.JToggleButton();
        f1 = new javax.swing.JToggleButton();
        f2 = new javax.swing.JToggleButton();
        f3 = new javax.swing.JToggleButton();
        f4 = new javax.swing.JToggleButton();
        f5 = new javax.swing.JToggleButton();
        f6 = new javax.swing.JToggleButton();
        f7 = new javax.swing.JToggleButton();
        f8 = new javax.swing.JToggleButton();
        g1 = new javax.swing.JToggleButton();
        g2 = new javax.swing.JToggleButton();
        g3 = new javax.swing.JToggleButton();
        g4 = new javax.swing.JToggleButton();
        g5 = new javax.swing.JToggleButton();
        g6 = new javax.swing.JToggleButton();
        g7 = new javax.swing.JToggleButton();
        g8 = new javax.swing.JToggleButton();
        h1 = new javax.swing.JToggleButton();
        h2 = new javax.swing.JToggleButton();
        h3 = new javax.swing.JToggleButton();
        h4 = new javax.swing.JToggleButton();
        h5 = new javax.swing.JToggleButton();
        h6 = new javax.swing.JToggleButton();
        h7 = new javax.swing.JToggleButton();
        h8 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        book_button = new javax.swing.JButton();
        back_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                formHierarchyChanged(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        time_slot.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        time_slot.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                time_slotItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Time");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seats", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Platinum");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Gold");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Silver");

        a1.setText("A1");
        a1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ActionPerformed(evt);
            }
        });

        a2.setText("A2");
        a2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a2ActionPerformed(evt);
            }
        });

        a3.setText("A3");

        a4.setText("A4");

        a5.setText("A5");

        a6.setText("A6");

        a7.setText("A7");

        a8.setText("A8");

        b1.setText("B1");

        b2.setText("B2");

        b3.setText("B3");

        b4.setText("B4");

        b5.setText("B5");

        b6.setText("B6");

        b7.setText("B7");

        b8.setText("B8");

        c1.setText("C1");

        c2.setText("C2");

        c3.setText("C3");

        c4.setText("C4");

        c5.setText("C5");

        c6.setText("C6");

        c7.setText("C7");

        c8.setText("C8");

        d1.setText("D1");

        d2.setText("D2");

        d3.setText("D3");

        d4.setText("D4");

        d5.setText("D5");

        d6.setText("D6");

        d7.setText("D7");

        d8.setText("D8");

        e1.setText("E1");

        e2.setText("E2");

        e3.setText("E3");

        e4.setText("E4");

        e5.setText("E5");

        e6.setText("E6");

        e7.setText("E7");

        e8.setText("E8");

        f1.setText("F1");

        f2.setText("F2");

        f3.setText("F3");

        f4.setText("F4");

        f5.setText("F5");

        f6.setText("F6");

        f7.setText("F7");

        f8.setText("F8");

        g1.setText("G1");

        g2.setText("G2");

        g3.setText("G3");

        g4.setText("G4");

        g5.setText("G5");

        g6.setText("G6");

        g7.setText("G7");

        g8.setText("G8");

        h1.setText("H1");

        h2.setText("H2");

        h3.setText("H3");

        h4.setText("H4");

        h5.setText("H5");

        h6.setText("H6");

        h7.setText("H7");

        h8.setText("H8");

        jToggleButton1.setText("Screen");
        jToggleButton1.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(b1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b4)
                        .addGap(38, 38, 38)
                        .addComponent(b5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(a1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a4)
                        .addGap(38, 38, 38)
                        .addComponent(a5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a8))
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(c1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c4)
                        .addGap(38, 38, 38)
                        .addComponent(c5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(d1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d4)
                        .addGap(38, 38, 38)
                        .addComponent(d5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(e1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e4)
                        .addGap(38, 38, 38)
                        .addComponent(e5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(f1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f4)
                        .addGap(38, 38, 38)
                        .addComponent(f5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f8))
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(h1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h4)
                        .addGap(38, 38, 38)
                        .addComponent(h5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(g1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g4)
                        .addGap(38, 38, 38)
                        .addComponent(g5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g8))
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a1)
                    .addComponent(a2)
                    .addComponent(a3)
                    .addComponent(a4)
                    .addComponent(a5)
                    .addComponent(a6)
                    .addComponent(a7)
                    .addComponent(a8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1)
                    .addComponent(b2)
                    .addComponent(b3)
                    .addComponent(b4)
                    .addComponent(b5)
                    .addComponent(b6)
                    .addComponent(b7)
                    .addComponent(b8))
                .addGap(35, 35, 35)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c1)
                    .addComponent(c2)
                    .addComponent(c3)
                    .addComponent(c4)
                    .addComponent(c5)
                    .addComponent(c6)
                    .addComponent(c7)
                    .addComponent(c8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d1)
                    .addComponent(d2)
                    .addComponent(d3)
                    .addComponent(d4)
                    .addComponent(d5)
                    .addComponent(d6)
                    .addComponent(d7)
                    .addComponent(d8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(e1)
                    .addComponent(e2)
                    .addComponent(e3)
                    .addComponent(e4)
                    .addComponent(e5)
                    .addComponent(e6)
                    .addComponent(e7)
                    .addComponent(e8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f1)
                    .addComponent(f2)
                    .addComponent(f3)
                    .addComponent(f4)
                    .addComponent(f5)
                    .addComponent(f6)
                    .addComponent(f7)
                    .addComponent(f8))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(g1)
                    .addComponent(g2)
                    .addComponent(g3)
                    .addComponent(g4)
                    .addComponent(g5)
                    .addComponent(g6)
                    .addComponent(g7)
                    .addComponent(g8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(h1)
                    .addComponent(h2)
                    .addComponent(h3)
                    .addComponent(h4)
                    .addComponent(h5)
                    .addComponent(h6)
                    .addComponent(h7)
                    .addComponent(h8))
                .addGap(18, 18, 18)
                .addComponent(jToggleButton1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        book_button.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        book_button.setText("Book Tickets");
        book_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_buttonActionPerformed(evt);
            }
        });

        back_button.setText("<- Go Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(back_button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(time_slot, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(book_button)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(time_slot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(back_button)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(book_button)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowLostFocus

    private void formHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formHierarchyChanged

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        String set2="set autocommit=1;";
        try
        {
            pst = conn.prepareStatement(set2);
            pst.execute();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        mainp.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        mainp.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_back_buttonActionPerformed

    private void book_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_buttonActionPerformed
        // TODO add your handling code here:
        //use rollback to delete data if there is no booking.
        // username,theatreid,challid,time,date,seatno
        String sql="insert into ticket values (?,?,?,?,?,?);";
        String set1="set autocommit=0;";
        String set2="set autocommit=1;";
        String roll="rollback;";
        try
        {
            pst = conn.prepareStatement(set1);
            pst.execute();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        int count=0;
        try
        {
            pst = conn.prepareStatement(sql);
            pst.setString(1,username);
            pst.setString(2,"1");
            pst.setString(3,"1");
            pst.setString(4,(String) ds.getSelectedItem());
            pst.setString(5,"2018-10-01");
            //rs = pst.executeQuery();            
            if(a1.isSelected())
            {
                pst.setString(6,"a1");
                pst.execute(); count++;
            }
            if(a2.isSelected())
            {
                pst.setString(6,"a2");
                pst.execute(); count++;
            }
            if(a3.isSelected())
            {
                pst.setString(6,"a3");
                pst.execute(); count++;
            }
            if(a4.isSelected())
            {
                pst.setString(6,"a4");
                pst.execute(); count++;
            }
            if(a5.isSelected())
            {
                pst.setString(6,"a5");
                pst.execute(); count++;
            }
            if(a6.isSelected())
            {
                pst.setString(6,"a6");
                pst.execute(); count++;
            }
            if(a7.isSelected())
            {
                pst.setString(6,"a7");
                pst.execute(); count++;
            }
            if(a8.isSelected())
            {
                pst.setString(6,"a8");
                pst.execute(); count++;
            }
            if(b1.isSelected())
            {
                pst.setString(6,"b1");
                pst.execute(); count++;
            }
            if(b2.isSelected())
            {
                pst.setString(6,"b2");
                pst.execute(); count++;
            }
            if(b3.isSelected())
            {
                pst.setString(6,"b3");
                pst.execute(); count++;
            }
            if(b4.isSelected())
            {
                pst.setString(6,"b4");
                pst.execute(); count++;
            }
            if(b5.isSelected())
            {
                pst.setString(6,"b5");
                pst.execute(); count++;
            }
            if(b6.isSelected())
            {
                pst.setString(6,"b6");
                pst.execute(); count++;
            }
            if(b7.isSelected())
            {
                pst.setString(6,"b7");
                pst.execute(); count++;
            }
            if(b8.isSelected())
            {
                pst.setString(6,"b8");
                pst.execute(); count++;
            }
            if(c1.isSelected())
            {
                pst.setString(6,"c1");
                pst.execute(); count++;
            }
            if(c2.isSelected())
            {
                pst.setString(6,"c2");
                pst.execute(); count++;
            }
            if(c3.isSelected())
            {
                pst.setString(6,"c3");
                pst.execute(); count++;
            }
            if(c4.isSelected())
            {
                pst.setString(6,"c4");
                pst.execute(); count++;
            }
            if(c5.isSelected())
            {
                pst.setString(6,"c5");
                pst.execute(); count++;
            }
            if(c6.isSelected())
            {
                pst.setString(6,"c6");
                pst.execute(); count++;
            }
            if(c7.isSelected())
            {
                pst.setString(6,"c7");
                pst.execute(); count++;
            }
            if(c8.isSelected())
            {
                pst.setString(6,"c8");
                pst.execute(); count++;
            }
            if(d1.isSelected())
            {
                pst.setString(6,"d1");
                pst.execute(); count++;
            }
            if(d2.isSelected())
            {
                pst.setString(6,"d2");
                pst.execute(); count++;
            }
            if(d3.isSelected())
            {
                pst.setString(6,"d3");
                pst.execute(); count++;
            }
            if(d4.isSelected())
            {
                pst.setString(6,"d4");
                pst.execute(); count++;
            }
            if(d5.isSelected())
            {
                pst.setString(6,"d5");
                pst.execute(); count++;
            }
            if(d6.isSelected())
            {
                pst.setString(6,"d6");
                pst.execute(); count++;
            }
            if(d7.isSelected())
            {
                pst.setString(6,"d7");
                pst.execute(); count++;
            }
            if(d8.isSelected())
            {
                pst.setString(6,"d8");
                pst.execute(); count++;
            }
            if(e1.isSelected())
            {
                pst.setString(6,"e1");
                pst.execute(); count++;
            }
            if(e2.isSelected())
            {
                pst.setString(6,"e2");
                pst.execute(); count++;
            }
            if(e3.isSelected())
            {
                pst.setString(6,"e3");
                pst.execute(); count++;
            }
            if(e4.isSelected())
            {
                pst.setString(6,"e4");
                pst.execute(); count++;
            }
            if(e5.isSelected())
            {
                pst.setString(6,"e5");
                pst.execute(); count++;
            }
            if(e6.isSelected())
            {
                pst.setString(6,"e6");
                pst.execute(); count++;
            }
            if(e7.isSelected())
            {
                pst.setString(6,"e7");
                pst.execute(); count++;
            }
            if(e8.isSelected())
            {
                pst.setString(6,"e8");
                pst.execute(); count++;
            }
            if(f1.isSelected())
            {
                pst.setString(6,"f1");
                pst.execute(); count++;
            }
            if(f2.isSelected())
            {
                pst.setString(6,"f2");
                pst.execute(); count++;
            }
            if(f3.isSelected())
            {
                pst.setString(6,"f3");
                pst.execute(); count++;
            }
            if(f4.isSelected())
            {
                pst.setString(6,"f4");
                pst.execute(); count++;
            }
            if(f5.isSelected())
            {
                pst.setString(6,"f5");
                pst.execute(); count++;
            }
            if(f6.isSelected())
            {
                pst.setString(6,"f6");
                pst.execute(); count++;
            }
            if(f7.isSelected())
            {
                pst.setString(6,"f7");
                pst.execute(); count++;
            }
            if(f8.isSelected())
            {
                pst.setString(6,"f8");
                pst.execute(); count++;
            }
            if(g1.isSelected())
            {
                pst.setString(6,"g1");
                pst.execute(); count++;
            }
            if(g2.isSelected())
            {
                pst.setString(6,"g2");
                pst.execute(); count++;
            }
            if(g3.isSelected())
            {
                pst.setString(6,"g3");
                pst.execute(); count++;
            }
            if(g4.isSelected())
            {
                pst.setString(6,"g4");
                pst.execute(); count++;
            }
            if(g5.isSelected())
            {
                pst.setString(6,"g5");
                pst.execute(); count++;
            }
            if(g6.isSelected())
            {
                pst.setString(6,"g6");
                pst.execute(); count++;
            }
            if(g7.isSelected())
            {
                pst.setString(6,"g7");
                pst.execute(); count++;
            }
            if(g8.isSelected())
            {
                pst.setString(6,"g8");
                pst.execute(); count++;
            }
            if(h1.isSelected())
            {
                pst.setString(6,"h1");
                pst.execute(); count++;
            }
            if(h2.isSelected())
            {
                pst.setString(6,"h2");
                pst.execute(); count++;
            }
            if(h3.isSelected())
            {
                pst.setString(6,"h3");
                pst.execute(); count++;
            }
            if(h4.isSelected())
            {
                pst.setString(6,"h4");
                pst.execute(); count++;
            }
            if(h5.isSelected())
            {
                pst.setString(6,"h5");
                pst.execute(); count++;
            }
            if(h6.isSelected())
            {
                pst.setString(6,"h6");
                pst.execute(); count++;
            }
            if(h7.isSelected())
            {
                pst.setString(6,"h7");
                pst.execute(); count++;
            }
            if(h8.isSelected())
            {
                pst.setString(6,"h8");
                pst.execute(); count++;
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        int cost=0;
        String c="select cost from screening where theatreid=? and challid=? and time=? and date=?";
        try
        {
            pst = conn.prepareStatement(c);
            pst.setString(1,"1");
            pst.setString(2,"1");
            pst.setString(3,(String) ds.getSelectedItem());
            pst.setString(4,"2018-10-01");
            rs=pst.executeQuery();
            if(rs.next())
            {
                cost=rs.getInt(1);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        
        int cnf=JOptionPane.showConfirmDialog(null, "Confirm this movie ticket?\nCost = "+(cost*count));
        // if pressed yes to confirm. that is the first button. that is button number 0.
        if(cnf==0)
        {
            JOptionPane.showMessageDialog(null, "Confirmed booking");
            try
            {
                pst = conn.prepareStatement(set2);
                pst.execute();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
            String abc="update screening set noseatbooked=noseatbooked+"+count+" where theatreid=? and challid=? and time=? and date=?";
            try
            {
                pst = conn.prepareStatement(abc);
                pst.setString(1,"1");
                pst.setString(2,"1");
                pst.setString(3,(String) ds.getSelectedItem());
                pst.setString(4,"2018-10-01");
                pst.execute();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
//            SendEmail s=new SendEmail();
//            s.booked(username);
            mainp.setVisible(true);
            this.hide();
            this.dispose();
        }
        else
        {
            
            try
            {
                pst = conn.prepareStatement(roll);
                pst.execute();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"rollingback");
                JOptionPane.showMessageDialog(null,e);
            }
        }
        try
        {
            pst = conn.prepareStatement(set2);
            pst.execute();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_book_buttonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        // get movieid,challid and date for time slots in theatres. Then fromthat we get a single theatre id 
        // we use combination of those to get seats booked.
        
        int count=0;
        String time="select * from screening where movieid=? and challid=? and date=?";
        try
        {
            pst = conn.prepareStatement(time);
            pst.setString(1,"1");
            pst.setString(2,"1");
            pst.setString(3,"2018-10-01");
            rs=pst.executeQuery();
            while(rs.next())
            {
                int tslot=rs.getInt("time");
                ds.addElement(Integer.toString(tslot));
                if(count==0)
                {
                    count++;
                    ds.setSelectedItem(Integer.toString(tslot));
                    }
            }
            time_slot.setModel(ds);
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"time slots");
            JOptionPane.showMessageDialog(null,e);
        }
        String sql="select * from ticket where theatreid=? and challid=? and time=? and date=?";
        try
        {
            pst = conn.prepareStatement(sql);
            pst.setString(1,"1");
            pst.setString(2,"1");
            String temp = (String) ds.getSelectedItem();
            pst.setString(3,temp);
            
            //pst.setString(3,"2100");
            pst.setString(4,"2018-10-01");
            rs = pst.executeQuery();
            String bseat;
            while (rs.next())
            {
                bseat=rs.getNString("seatno");
                switch(bseat)
                {
                    case "a1":a1.setEnabled(false);
                            break;
                    case "a2":a2.setEnabled(false);
                            break;
                    case "a3":a3.setEnabled(false);
                            break;
                    case "a4":a4.setEnabled(false);
                            break;
                    case "a5":a5.setEnabled(false);
                            break;
                    case "a6":a6.setEnabled(false);
                            break;
                    case "a7":a7.setEnabled(false);
                            break;
                    case "a8":a8.setEnabled(false);
                            break;
                    case "b1":b1.setEnabled(false);
                            break;
                    case "b2":b2.setEnabled(false);
                            break;
                    case "b3":b3.setEnabled(false);
                            break;
                    case "b4":b4.setEnabled(false);
                            break;
                    case "b5":b5.setEnabled(false);
                            break;
                    case "b6":b6.setEnabled(false);
                            break;
                    case "b7":b7.setEnabled(false);
                            break;
                    case "b8":b8.setEnabled(false);
                            break;
                    case "c1":c1.setEnabled(false);
                            break;
                    case "c2":c2.setEnabled(false);
                            break;
                    case "c3":c3.setEnabled(false);
                            break;
                    case "c4":c4.setEnabled(false);
                            break;
                    case "c5":c5.setEnabled(false);
                            break;
                    case "c6":c6.setEnabled(false);
                            break;
                    case "c7":c7.setEnabled(false);
                            break;
                    case "c8":c8.setEnabled(false);
                            break;
                    case "d1":d1.setEnabled(false);
                            break;
                    case "d2":d2.setEnabled(false);
                            break;
                    case "d3":d3.setEnabled(false);
                            break;
                    case "d4":d4.setEnabled(false);
                            break;
                    case "d5":d5.setEnabled(false);
                            break;
                    case "d6":d6.setEnabled(false);
                            break;
                    case "d7":d7.setEnabled(false);
                            break;
                    case "d8":d8.setEnabled(false);
                            break;
                    case "e1":e1.setEnabled(false);
                            break;
                    case "e2":e2.setEnabled(false);
                            break;
                    case "e3":e3.setEnabled(false);
                            break;
                    case "e4":e4.setEnabled(false);
                            break;
                    case "e5":e5.setEnabled(false);
                            break;
                    case "e6":e6.setEnabled(false);
                            break;
                    case "e7":e7.setEnabled(false);
                            break;
                    case "e8":e8.setEnabled(false);
                            break;
                    case "f1":f1.setEnabled(false);
                            break;
                    case "f2":f2.setEnabled(false);
                            break;
                    case "f3":f3.setEnabled(false);
                            break;
                    case "f4":f4.setEnabled(false);
                            break;
                    case "f5":f5.setEnabled(false);
                            break;
                    case "f6":f6.setEnabled(false);
                            break;
                    case "f7":f7.setEnabled(false);
                            break;
                    case "f8":f8.setEnabled(false);
                            break;
                    case "g1":g1.setEnabled(false);
                            break;
                    case "g2":g2.setEnabled(false);
                            break;
                    case "g3":g3.setEnabled(false);
                            break;
                    case "g4":g4.setEnabled(false);
                            break;
                    case "g5":g5.setEnabled(false);
                            break;
                    case "g6":g6.setEnabled(false);
                            break;
                    case "g7":g7.setEnabled(false);
                            break;
                    case "g8":g8.setEnabled(false);
                            break;
                    case "h1":h1.setEnabled(false);
                            break;
                    case "h2":h2.setEnabled(false);
                            break;
                    case "h3":h3.setEnabled(false);
                            break;
                    case "h4":h4.setEnabled(false);
                            break;
                    case "h5":h5.setEnabled(false);
                            break;
                    case "h6":h6.setEnabled(false);
                            break;
                    case "h7":h7.setEnabled(false);
                            break;
                    case "h8":h8.setEnabled(false);
                            break;                     
                }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"load buttons");
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formWindowOpened

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void a2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a2ActionPerformed

    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a1ActionPerformed

    private void time_slotItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_time_slotItemStateChanged
        // TODO add your handling code here:
        a1.setEnabled(true);
        a2.setEnabled(true);
        a3.setEnabled(true);
        a4.setEnabled(true);
        a5.setEnabled(true);
        a6.setEnabled(true);
        a7.setEnabled(true);
        a8.setEnabled(true);
        b1.setEnabled(true);
        b2.setEnabled(true);
        b3.setEnabled(true);
        b4.setEnabled(true);
        b5.setEnabled(true);
        b6.setEnabled(true);
        b7.setEnabled(true);
        b8.setEnabled(true);
        c1.setEnabled(true);
        c2.setEnabled(true);
        c3.setEnabled(true);
        c4.setEnabled(true);
        c5.setEnabled(true);
        c6.setEnabled(true);
        c7.setEnabled(true);
        c8.setEnabled(true);
        d1.setEnabled(true);
        d2.setEnabled(true);
        d3.setEnabled(true);
        d4.setEnabled(true);
        d5.setEnabled(true);
        d6.setEnabled(true);
        d7.setEnabled(true);
        d8.setEnabled(true);
        e1.setEnabled(true);
        e2.setEnabled(true);
        e3.setEnabled(true);
        e4.setEnabled(true);
        e5.setEnabled(true);
        e6.setEnabled(true);
        e7.setEnabled(true);
        e8.setEnabled(true);
        f1.setEnabled(true);
        f2.setEnabled(true);
        f3.setEnabled(true);
        f4.setEnabled(true);
        f5.setEnabled(true);
        f6.setEnabled(true);
        f7.setEnabled(true);
        f8.setEnabled(true);
        g1.setEnabled(true);
        g2.setEnabled(true);
        g3.setEnabled(true);
        g4.setEnabled(true);
        g5.setEnabled(true);
        g6.setEnabled(true);
        g7.setEnabled(true);
        g8.setEnabled(true);
        h1.setEnabled(true);
        h2.setEnabled(true);
        h3.setEnabled(true);
        h4.setEnabled(true);
        h5.setEnabled(true);
        h6.setEnabled(true);
        h7.setEnabled(true);
        h8.setEnabled(true);
        String sql="select * from ticket where theatreid=? and challid=? and time=? and date=?";
        try
        {
            pst = conn.prepareStatement(sql);
            pst.setString(1,"1");
            pst.setString(2,"1");
            String temp=(String) ds.getSelectedItem();
            pst.setString(3,temp);
            pst.setString(4,"2018-10-01");
            rs = pst.executeQuery();
            String bseat;
            while (rs.next())
            {
                bseat=rs.getNString("seatno");
                switch(bseat)
                {
                    case "a1":a1.setEnabled(false);
                            break;
                    case "a2":a2.setEnabled(false);
                            break;
                    case "a3":a3.setEnabled(false);
                            break;
                    case "a4":a4.setEnabled(false);
                            break;
                    case "a5":a5.setEnabled(false);
                            break;
                    case "a6":a6.setEnabled(false);
                            break;
                    case "a7":a7.setEnabled(false);
                            break;
                    case "a8":a8.setEnabled(false);
                            break;
                    case "b1":b1.setEnabled(false);
                            break;
                    case "b2":b2.setEnabled(false);
                            break;
                    case "b3":b3.setEnabled(false);
                            break;
                    case "b4":b4.setEnabled(false);
                            break;
                    case "b5":b5.setEnabled(false);
                            break;
                    case "b6":b6.setEnabled(false);
                            break;
                    case "b7":b7.setEnabled(false);
                            break;
                    case "b8":b8.setEnabled(false);
                            break;
                    case "c1":c1.setEnabled(false);
                            break;
                    case "c2":c2.setEnabled(false);
                            break;
                    case "c3":c3.setEnabled(false);
                            break;
                    case "c4":c4.setEnabled(false);
                            break;
                    case "c5":c5.setEnabled(false);
                            break;
                    case "c6":c6.setEnabled(false);
                            break;
                    case "c7":c7.setEnabled(false);
                            break;
                    case "c8":c8.setEnabled(false);
                            break;
                    case "d1":d1.setEnabled(false);
                            break;
                    case "d2":d2.setEnabled(false);
                            break;
                    case "d3":d3.setEnabled(false);
                            break;
                    case "d4":d4.setEnabled(false);
                            break;
                    case "d5":d5.setEnabled(false);
                            break;
                    case "d6":d6.setEnabled(false);
                            break;
                    case "d7":d7.setEnabled(false);
                            break;
                    case "d8":d8.setEnabled(false);
                            break;
                    case "e1":e1.setEnabled(false);
                            break;
                    case "e2":e2.setEnabled(false);
                            break;
                    case "e3":e3.setEnabled(false);
                            break;
                    case "e4":e4.setEnabled(false);
                            break;
                    case "e5":e5.setEnabled(false);
                            break;
                    case "e6":e6.setEnabled(false);
                            break;
                    case "e7":e7.setEnabled(false);
                            break;
                    case "e8":e8.setEnabled(false);
                            break;
                    case "f1":f1.setEnabled(false);
                            break;
                    case "f2":f2.setEnabled(false);
                            break;
                    case "f3":f3.setEnabled(false);
                            break;
                    case "f4":f4.setEnabled(false);
                            break;
                    case "f5":f5.setEnabled(false);
                            break;
                    case "f6":f6.setEnabled(false);
                            break;
                    case "f7":f7.setEnabled(false);
                            break;
                    case "f8":f8.setEnabled(false);
                            break;
                    case "g1":g1.setEnabled(false);
                            break;
                    case "g2":g2.setEnabled(false);
                            break;
                    case "g3":g3.setEnabled(false);
                            break;
                    case "g4":g4.setEnabled(false);
                            break;
                    case "g5":g5.setEnabled(false);
                            break;
                    case "g6":g6.setEnabled(false);
                            break;
                    case "g7":g7.setEnabled(false);
                            break;
                    case "g8":g8.setEnabled(false);
                            break;
                    case "h1":h1.setEnabled(false);
                            break;
                    case "h2":h2.setEnabled(false);
                            break;
                    case "h3":h3.setEnabled(false);
                            break;
                    case "h4":h4.setEnabled(false);
                            break;
                    case "h5":h5.setEnabled(false);
                            break;
                    case "h6":h6.setEnabled(false);
                            break;
                    case "h7":h7.setEnabled(false);
                            break;
                    case "h8":h8.setEnabled(false);
                            break;                     
                }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_time_slotItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(seat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(seat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(seat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(seat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new seat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton a1;
    private javax.swing.JToggleButton a2;
    private javax.swing.JToggleButton a3;
    private javax.swing.JToggleButton a4;
    private javax.swing.JToggleButton a5;
    private javax.swing.JToggleButton a6;
    private javax.swing.JToggleButton a7;
    private javax.swing.JToggleButton a8;
    private javax.swing.JToggleButton b1;
    private javax.swing.JToggleButton b2;
    private javax.swing.JToggleButton b3;
    private javax.swing.JToggleButton b4;
    private javax.swing.JToggleButton b5;
    private javax.swing.JToggleButton b6;
    private javax.swing.JToggleButton b7;
    private javax.swing.JToggleButton b8;
    private javax.swing.JButton back_button;
    private javax.swing.JButton book_button;
    private javax.swing.JToggleButton c1;
    private javax.swing.JToggleButton c2;
    private javax.swing.JToggleButton c3;
    private javax.swing.JToggleButton c4;
    private javax.swing.JToggleButton c5;
    private javax.swing.JToggleButton c6;
    private javax.swing.JToggleButton c7;
    private javax.swing.JToggleButton c8;
    private javax.swing.JToggleButton d1;
    private javax.swing.JToggleButton d2;
    private javax.swing.JToggleButton d3;
    private javax.swing.JToggleButton d4;
    private javax.swing.JToggleButton d5;
    private javax.swing.JToggleButton d6;
    private javax.swing.JToggleButton d7;
    private javax.swing.JToggleButton d8;
    private javax.swing.JToggleButton e1;
    private javax.swing.JToggleButton e2;
    private javax.swing.JToggleButton e3;
    private javax.swing.JToggleButton e4;
    private javax.swing.JToggleButton e5;
    private javax.swing.JToggleButton e6;
    private javax.swing.JToggleButton e7;
    private javax.swing.JToggleButton e8;
    private javax.swing.JToggleButton f1;
    private javax.swing.JToggleButton f2;
    private javax.swing.JToggleButton f3;
    private javax.swing.JToggleButton f4;
    private javax.swing.JToggleButton f5;
    private javax.swing.JToggleButton f6;
    private javax.swing.JToggleButton f7;
    private javax.swing.JToggleButton f8;
    private javax.swing.JToggleButton g1;
    private javax.swing.JToggleButton g2;
    private javax.swing.JToggleButton g3;
    private javax.swing.JToggleButton g4;
    private javax.swing.JToggleButton g5;
    private javax.swing.JToggleButton g6;
    private javax.swing.JToggleButton g7;
    private javax.swing.JToggleButton g8;
    private javax.swing.JToggleButton h1;
    private javax.swing.JToggleButton h2;
    private javax.swing.JToggleButton h3;
    private javax.swing.JToggleButton h4;
    private javax.swing.JToggleButton h5;
    private javax.swing.JToggleButton h6;
    private javax.swing.JToggleButton h7;
    private javax.swing.JToggleButton h8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox<String> time_slot;
    // End of variables declaration//GEN-END:variables
}
